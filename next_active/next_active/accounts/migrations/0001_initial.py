# Generated by Django 4.2.16 on 2024-12-11 14:44

import cloudinary.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('is_trainer', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TrainerProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='trainer', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('sport', models.CharField(choices=[('Athletics', 'Athletics'), ('Badminton', 'Badminton'), ('Basketball', 'Basketball'), ('Boxing', 'Boxing'), ('Wrestling', 'Wrestling'), ('Gymnastics', 'Gymnastics'), ('Rowing', 'Rowing'), ('Judo', 'Judo'), ('Swimming', 'Swimming'), ('Paragliding', 'Paragliding'), ('Rugby', 'Rugby'), ('Shooting', 'Shooting'), ('Snowboarding', 'Snowboarding'), ('Skiing', 'Skiing'), ('Table Tennis', 'Table Tennis'), ('Tennis', 'Tennis'), ('Taekwondo', 'Taekwondo'), ('Volleyball', 'Volleyball'), ('Weightlifting', 'Weightlifting'), ('Handball', 'Handball'), ('Horse Riding', 'Horse Riding'), ('Ice Hockey', 'Ice Hockey'), ('Chess', 'Chess'), ('Cycling', 'Cycling'), ('Fitness', 'Fitness'), ('Football', 'Football'), ('Fencing', 'Fencing'), ('Yoga', 'Yoga'), ('Karate', 'Karate'), ('Other', 'Other')], max_length=100)),
                ('location', models.CharField(blank=True, max_length=50, null=True)),
                ('experience', models.PositiveIntegerField(blank=True, null=True)),
                ('certifications', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('profile_picture', cloudinary.models.CloudinaryField(blank=True, default='https://res.cloudinary.com/dsyzcsr5w/image/upload/v1733430959/users/0/aqkxfvktpokyyzu3dmmx.jpg', max_length=255, null=True, verbose_name='image')),
                ('bio', models.TextField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
            ],
        ),
    ]
